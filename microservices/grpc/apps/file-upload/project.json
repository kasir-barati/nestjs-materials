{
  "name": "file-upload",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/file-upload/src",
  "projectType": "application",
  "tags": [],
  "targets": {
    "grpc:gen": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          {
            "command": "rm -rf {projectRoot}/src/assets/interfaces",
            "forwardAllArgs": false,
            "description": "Cleaning up"
          },
          {
            "command": "mkdir -p {projectRoot}/src/assets/interfaces",
            "forwardAllArgs": false,
            "description": "Recreating the directory"
          },
          {
            "command": "npx protoc --plugin=./node_modules/.bin/protoc-gen-ts_proto --ts_proto_opt=fileSuffix=.interface --ts_proto_opt=nestJs=true --ts_proto_opt=addNestjsRestParameter=true --ts_proto_out={projectRoot}/src/assets/interfaces -I {projectRoot}/src/assets/ {projectRoot}/src/assets/*.proto",
            "forwardAllArgs": true,
            "description": "Generating the interfaces, and decorators out of protobuf files."
          }
        ],
        "cwd": "{workspaceRoot}",
        "parallel": false
      },
      "parallelism": false
    },
    "build": {
      "executor": "nx:run-commands",
      "options": {
        "command": "webpack-cli build",
        "args": ["node-env=production"]
      },
      "configurations": {
        "development": {
          "args": ["node-env=development"]
        }
      },
      "parallelism": false
    },
    "serve": {
      "executor": "@nx/js:node",
      "defaultConfiguration": "development",
      "dependsOn": ["build", "compose:up"],
      "options": {
        "buildTarget": "file-upload:build",
        "runBuildTargetDependencies": false
      },
      "configurations": {
        "development": {
          "buildTarget": "file-upload:build:development"
        },
        "production": {
          "buildTarget": "file-upload:build:production"
        }
      }
    },
    "compose:up": {
      "executor": "nx:run-commands",
      "parallelism": false,
      "cache": false,
      "options": {
        "commands": [
          {
            "command": "docker compose up -d",
            "forwardAllArgs": true
          }
        ],
        "cwd": "{projectRoot}"
      }
    },
    "compose:down": {
      "executor": "nx:run-commands",
      "parallelism": false,
      "cache": false,
      "options": {
        "commands": [
          {
            "command": "docker compose down",
            "forwardAllArgs": true
          }
        ],
        "cwd": "{projectRoot}"
      }
    },
    "test": {
      "options": {
        "passWithNoTests": true
      }
    }
  }
}
