// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               v3.20.3
// source: user.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "user";

export interface UserById {
  id: string;
}

export interface User {
  id: string;
  name: string;
}

export const USER_PACKAGE_NAME = "user";

export interface GrpcUserServiceClient {
  findOne(request: UserById, ...rest: any): Observable<User>;
}

export interface GrpcUserServiceController {
  findOne(request: UserById, ...rest: any): Promise<User> | Observable<User> | User;
}

export function GrpcUserServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["findOne"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("GrpcUserService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("GrpcUserService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const GRPC_USER_SERVICE_NAME = "GrpcUserService";
