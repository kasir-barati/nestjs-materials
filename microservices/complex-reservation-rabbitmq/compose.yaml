services:
  auth-api:
    image: auth-api
    container_name: auth-api-container
    ports:
      - ${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}
    build:
      context: .
      dockerfile: ./apps/auth-service/Dockerfile
      args:
        AUTH_SERVICE_PORT: ${AUTH_SERVICE_PORT}
        MICROSERVICES_WORKDIR: ${MICROSERVICES_WORKDIR}
    depends_on:
      auth-db:
        condition: service_healthy
    env_file:
      - .env
      - apps/auth-service/.env

  reservation-api:
    image: reservation-api
    container_name: reservation-api-container
    ports:
      - ${RESERVATION_SERVICE_PORT}:${RESERVATION_SERVICE_PORT}
    build:
      context: .
      dockerfile: ./apps/reservation-service/Dockerfile
      args:
        RESERVATION_SERVICE_PORT: ${RESERVATION_SERVICE_PORT}
        MICROSERVICES_WORKDIR: ${MICROSERVICES_WORKDIR}
    depends_on:
      reservation-db:
        condition: service_healthy
    env_file:
      - .env
      - apps/reservation-service/.env

  payment-api:
    image: payment-api
    container_name: payment-api-container
    build:
      context: .
      dockerfile: ./apps/payment-service/Dockerfile
      args:
        MICROSERVICES_WORKDIR: ${MICROSERVICES_WORKDIR}
    env_file: apps/payment-service/.env

  notification-api:
    image: notification-api
    container_name: notification-api-container
    build:
      context: .
      dockerfile: ./apps/notification-service/Dockerfile
      args:
        MICROSERVICES_WORKDIR: ${MICROSERVICES_WORKDIR}
    depends_on:
      mailcatcher:
        condition: service_started
    env_file: apps/notification-service/.env

  auth-db:
    image: mongo:8.0.0-rc17-noble
    container_name: auth-database
    ports:
      - 27018:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  reservation-db:
    image: mongo:8.0.0-rc17-noble
    container_name: reservation-database
    ports:
      - 27019:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  mailcatcher:
    image: sj26/mailcatcher:v0.8.2
    ports:
      - "1025:1025"
      - "1080:1080"
